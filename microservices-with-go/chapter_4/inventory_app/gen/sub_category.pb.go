// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: sub_category.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubCategoryBaseInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubCategoryBaseInfo) Reset() {
	*x = SubCategoryBaseInfo{}
	mi := &file_sub_category_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubCategoryBaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubCategoryBaseInfo) ProtoMessage() {}

func (x *SubCategoryBaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sub_category_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubCategoryBaseInfo.ProtoReflect.Descriptor instead.
func (*SubCategoryBaseInfo) Descriptor() ([]byte, []int) {
	return file_sub_category_proto_rawDescGZIP(), []int{0}
}

func (x *SubCategoryBaseInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SubCategoryBaseInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SubCategoryBasic struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseInfo      *SubCategoryBaseInfo   `protobuf:"bytes,1,opt,name=baseInfo,proto3" json:"baseInfo,omitempty"`
	CategoryID    int64                  `protobuf:"varint,2,opt,name=categoryID,proto3" json:"categoryID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubCategoryBasic) Reset() {
	*x = SubCategoryBasic{}
	mi := &file_sub_category_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubCategoryBasic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubCategoryBasic) ProtoMessage() {}

func (x *SubCategoryBasic) ProtoReflect() protoreflect.Message {
	mi := &file_sub_category_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubCategoryBasic.ProtoReflect.Descriptor instead.
func (*SubCategoryBasic) Descriptor() ([]byte, []int) {
	return file_sub_category_proto_rawDescGZIP(), []int{1}
}

func (x *SubCategoryBasic) GetBaseInfo() *SubCategoryBaseInfo {
	if x != nil {
		return x.BaseInfo
	}
	return nil
}

func (x *SubCategoryBasic) GetCategoryID() int64 {
	if x != nil {
		return x.CategoryID
	}
	return 0
}

var File_sub_category_proto protoreflect.FileDescriptor

const file_sub_category_proto_rawDesc = "" +
	"\n" +
	"\x12sub_category.proto\"9\n" +
	"\x13SubCategoryBaseInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"d\n" +
	"\x10SubCategoryBasic\x120\n" +
	"\bbaseInfo\x18\x01 \x01(\v2\x14.SubCategoryBaseInfoR\bbaseInfo\x12\x1e\n" +
	"\n" +
	"categoryID\x18\x02 \x01(\x03R\n" +
	"categoryIDB\x06Z\x04/genb\x06proto3"

var (
	file_sub_category_proto_rawDescOnce sync.Once
	file_sub_category_proto_rawDescData []byte
)

func file_sub_category_proto_rawDescGZIP() []byte {
	file_sub_category_proto_rawDescOnce.Do(func() {
		file_sub_category_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sub_category_proto_rawDesc), len(file_sub_category_proto_rawDesc)))
	})
	return file_sub_category_proto_rawDescData
}

var file_sub_category_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_sub_category_proto_goTypes = []any{
	(*SubCategoryBaseInfo)(nil), // 0: SubCategoryBaseInfo
	(*SubCategoryBasic)(nil),    // 1: SubCategoryBasic
}
var file_sub_category_proto_depIdxs = []int32{
	0, // 0: SubCategoryBasic.baseInfo:type_name -> SubCategoryBaseInfo
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_sub_category_proto_init() }
func file_sub_category_proto_init() {
	if File_sub_category_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sub_category_proto_rawDesc), len(file_sub_category_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sub_category_proto_goTypes,
		DependencyIndexes: file_sub_category_proto_depIdxs,
		MessageInfos:      file_sub_category_proto_msgTypes,
	}.Build()
	File_sub_category_proto = out.File
	file_sub_category_proto_goTypes = nil
	file_sub_category_proto_depIdxs = nil
}
